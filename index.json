[{"authors":["admin"],"categories":null,"content":"I am a PhD student working on performance analysis and Quality of Service in computer architectures, at the Networking and Cloud Computing Lab of the University of Pisa.\nI enjoy studying problems and coding solutions. Also, when I have too much time on my hands, trains.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/raffaele-zippo/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/raffaele-zippo/","section":"authors","summary":"I am a PhD student working on performance analysis and Quality of Service in computer architectures, at the Networking and Cloud Computing Lab of the University of Pisa.\nI enjoy studying problems and coding solutions.","tags":null,"title":"Raffaele Zippo","type":"authors"},{"authors":["Enrico Meloni","Raffaele Zippo"],"categories":["Machine Learning"],"content":"This Android app performs face recognition and identification through the smartphone\u0026rsquo;s camera. The app uses an internal database containing the known identities, including sample photos. The app allows the user to check the database content, delete or add new identities.\nFace Detection is powered by Haar Cascade Classifier. Face Feature are extracted by VGG2 trained on VGGFace2.\nClassification is performed by weighted kNN on the extracted face features.\nData processing is powered by OpenCV for Java.\n","date":1593006465,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593006465,"objectID":"306c5653afd984377435463a84a7b0d7","permalink":"/project/facerecognition/","publishdate":"2020-06-24T15:47:45+02:00","relpermalink":"/project/facerecognition/","section":"project","summary":"A face recognition app for android powered by Machine Learning","tags":["machine learning","android","app","java","face recognition"],"title":"Face Recognition App","type":"project"},{"authors":["Enrico Meloni","Raffaele Zippo","Marco Pinna"],"categories":["Software Development"],"content":"WARNING: This is an ongoing project Experiment Launcher (temporary name) is a scientific utility aimed at storing the experimental results out-putted by a third party software. It allows the user to specify an experiment with a set of parameters andan executable file, and then proceeds to launch the executable and collecting the output. The output is then provided to the user in a human-friendly interface, recording important information such as the date and timewhen the experiment was launched, the parameters, and also the executable version (if version control is used).\n","date":1593006458,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593006458,"objectID":"1115e33f2c7ccb3d78e034e191f8eb10","permalink":"/project/explauncher/","publishdate":"2020-06-24T15:47:38+02:00","relpermalink":"/project/explauncher/","section":"project","summary":"An Electron app for managing and launching batch of experiments","tags":["typescript","electron","experiments","data analysis","data visualization"],"title":"Exp Launcher","type":"project"},{"authors":["Enrico Meloni","Raffaele Zippo","Edoardo Sassu","Giuseppe Lettieri","Richard Barger"],"categories":["Software Development"],"content":"WanRaptor is my first job as a Software Engineer and Project Manager with a big enterprise.\nThe WanRaptor is an embedded system used to validate an application in a lab environment by emulating bandwidth limitations, latency, packets loss and jitter commonly found in WANs.\nThe project involved the development from the ground up of the full-stack Graphical User Interface, including management of hardware resources, installation, secure licensing and user interaction.\nThe WanRaptor is widely used in many laboratories all over United States and further.\n","date":1593006428,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593006428,"objectID":"34f891b4ff47cef5c4162e30a9eb5526","permalink":"/project/wanraptor/","publishdate":"2020-06-24T15:47:08+02:00","relpermalink":"/project/wanraptor/","section":"project","summary":"An embedded Network Impairments Emulator with high-bandwidth and high precision performances","tags":["wanraptor","java","grails","typescript","javascript","node","embedded systems","network emulator"],"title":"WanRaptor","type":"project"},{"authors":["Enrico Meloni","Raffaele Zippo"],"categories":["Software Development"],"content":"This library was developed as group project for Concurrent and Distributed Systems course.\nThe idea behind this project was to implement first-hand a synchronization layer like most multiplayer games use nowadays. The simulation (game) in object is collaborative effort where multiple clients generate inputs that drive it. The synchronization layer has to guarantee that each client processes inputs in the correct order so that everyone has a consistent view of the simulation, without ever sharing its state directly.\nWe chose to implement the most strict version of lockstep, which doesn\u0026rsquo;t allow for the simulation to go on speculatively in case of delays, contrary to most games. We also chose the client-server structure, which should give the lowest delay in most cases. In order to make the library as generic as possible, we chose to use Java Serialization for marshalling/unmarshalling. This gives a huge overhead in terms of bandwidth, and should be reconsidered given the specific application needs.\n\r\rClient Structure\r\r\r\r\rServer Structure\r\r\r","date":1593006417,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593006417,"objectID":"3586e3c94815dae86f2c01ce9d2294e4","permalink":"/project/lockstep-library/","publishdate":"2020-06-24T15:46:57+02:00","relpermalink":"/project/lockstep-library/","section":"project","summary":"A Lockstep Network Synchronization Layer for distributed reliable simulations","tags":["java","concurrent systems","distributed systems","distributed simulations","lockstep"],"title":"Lockstep Library","type":"project"},{"authors":["Enrico Meloni","Raffaele Zippo"],"categories":["Software Development"],"content":"The application is a secure photo sharing service which uses KPABE encryption to enforce access to pictures exclusively to allowed users. The application is written in C# for the Windows platform and depends on a KPABE command line implementation\n(*): The featured image is extracted from A Work in Progress: Context based Encryption Scheme for Internet of Things\n","date":1593006408,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593006408,"objectID":"ad1e0b66ba615b3db9a3690aeb1d6465","permalink":"/project/abe-photo-sharing/","publishdate":"2020-06-24T15:46:48+02:00","relpermalink":"/project/abe-photo-sharing/","section":"project","summary":"Secure Photo Sharing Service powered by KPABE","tags":["security","kpabe","encryption","c#","windows"],"title":"ABE Photo Sharing","type":"project"}]